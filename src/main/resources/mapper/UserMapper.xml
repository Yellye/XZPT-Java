<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xz.fzu.dao.IUserDao">

    <!--返回值的map-->
    <resultMap id="selectMap" type="User">
        <result property="userId" column="user_id"/>
        <result property="passwd" column="passwd"/>
        <result property="telephone" column="telephone"/>
        <result property="userName" column="user_name"/>
        <result property="headUrl" column="head_url"/>
        <result property="email" column="email"/>
        <result property="sex" column="sex"/>
        <result property="school" column="school"/>
        <result property="specialty" column="specialty"/>
        <result property="occupation" column="occupation"/>
        <result property="presentCity" column="present_city"/>
        <result property="expectedCity" column="expected_city"/>
        <result property="token" column="token"/>
    </resultMap>

    <!--插入一个用户-->
    <insert id="insertUser" parameterType="xz.fzu.model.User">
        INSERT INTO user(user_id,passwd, telephone, user_name, head_url,email, sex,school, specialty, occupation, present_city, expected_city,token)
          VALUES ( #{userId},#{passwd},#{telephone},#{userName},#{headUrl},#{email},#{sex},#{school},#{specialty},#{occupation},#{presentCity},#{expectedCity},#{token})
    </insert>

    <!--根据邮箱查找用户-->
    <select id="selectByEmail" parameterType="java.lang.String" resultType="User" resultMap="selectMap">
        SELECT * FROM user WHERE email =#{email}
    </select>

    <!--根据id查找用户 调用此方法前应先调用token得到userid的方法-->
    <select id="selectByUserId" parameterType="java.lang.String" resultType="User" resultMap="selectMap">
        SELECT *  FROM user WHERE user_id =#{userId}
    </select>

    <!-- 验证用户名和密码 -->
    <select id="vertifyUser" parameterType="xz.fzu.model.User" resultType="int">
        SELECT COUNT(*) FROM user WHERE email =#{email} AND passwd=#{passwd}
    </select>

    <!-- 通过token查找用户 -->
    <select id="selectUserIdByToken" parameterType="java.lang.String" resultType="String">
        SELECT user_id FROM user WHERE token =#{token}
    </select>

    <!-- 更新token -->
    <select id="updateToken">
        UPDATE user SET token=#{arg0} WHERE user_id=#{arg1}
    </select>

    <!-- 更新密码 -->
    <!--parameterType="hashmap 多参数，暂时使用序号"-->
    <select id="updatePasswd">
        UPDATE user SET passwd=#{arg1} WHERE user_id=#{arg0}
    </select>
</mapper>